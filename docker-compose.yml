version: '3'
services:
  db_migrate:
    image: linotp
    container_name: db_migrate
    restart: "no"
    entrypoint: ""
    depends_on:
      - postgres
    volumes:
      - ./linotp/linotp.ini:/etc/linotp2/linotp.ini
      - ./linotp/encKey:/etc/linotp2/encKey
      - ./linotp/public.pem:/etc/linotp2/public.pem
      - ./linotp/private.pem:/etc/linotp2/private.pem
    command: paster setup-app /etc/linotp2/linotp.ini

  linotp:
    image: linotp
    container_name: linotp
    restart: "always"
    # entrypoint: ""
    ports:
      # - '8080:80'
      - '5001:5001'
    depends_on:
      - db_migrate
    labels:
      - "traefik.port=5001"
      - "traefik.frontend.rule=PathPrefixStrip:/"
    volumes:
      - ./linotp/linotp.ini:/etc/linotp2/linotp.ini
      - ./linotp/encKey:/etc/linotp2/encKey
      - ./linotp/linotp2.conf:/etc/httpd/conf.d/linotp2.conf
      - ./linotp/public.pem:/etc/linotp2/public.pem
      - ./linotp/private.pem:/etc/linotp2/private.pem
      - ./linotp/admins:/etc/linotp2/admins
    # command: paster serve /etc/linotp2/linotp.ini

  postgres:
    restart: always
    image: postgres:10.4-alpine
    container_name: postgres
    # volumes:
    #  - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=linotp
      - POSTGRES_PASSWORD=linotp
      - POSTGRES_DB=linotp

  traefik:
    image: traefik:v1.7.9  # The official Traefik docker image
    container_name: traefik
    command: --api --docker  # Enables the web UI and tells Traefik to listen to docker
    depends_on:
      - linotp
    ports:
      - "80:80"      # The HTTP port
      - "8080:8080"  # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events